Welcome to Lean's  git source of OpenWrt and packages

中文：如何编译自己需要的 OpenWrt 固件

注意：
1. 不要用 root 用户 git 和编译！！！
2. 国内用户编译前最好准备好梯子
3.默认登陆IP 192.168.2.187 
4.WSL系统代理设置如下：
export http_proxy=http://127.0.0.1:1080
export https_proxy=http://127.0.0.1:1080
export ftp_proxy=http://127.0.0.1:1080
打开22端口的命令如下：（用于实现用notepad++远程连接提wsl）
sudo service ssh start
若要定制openwrt信息，请修改zzz-default-setting文件中的openwrt_release值

编译命令如下:

1. 首先装好 Ubuntu 64bit，推荐  Ubuntu  18 LTS x64

2. 命令行输入 sudo apt-get update ，然后
Ubuntu  14 LTS x64输入
sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler

Ubuntu  18 LTS x64输入
sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3.5 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf

3. git clone https://github.com/coolsnowwolf/lede 命令下载好源代码，然后 cd lede 进入目录

4. 加入kiddin9的openwrt-packages：
vi feeds.conf.default
加入src-git kiddin9 https://github.com/kiddin9/openwrt-packages.git
./scripts/feeds clean
./scripts/feeds update -a 
删除与Lean重复的插件
rm -rf feeds/kiddin9/adbyby
rm -rf feeds/kiddin9/amule
rm -rf feeds/kiddin9/antileech
rm -rf feeds/kiddin9/autocore
rm -rf feeds/kiddin9/automount
rm -rf feeds/kiddin9/baidupcs-web
rm -rf feeds/kiddin9/default-settings
rm -rf feeds/kiddin9/dns2socks
rm -rf feeds/kiddin9/dnsforwarder
rm -rf feeds/kiddin9/dnsproxy
rm -rf feeds/kiddin9/dsmboot
rm -rf feeds/kiddin9/gamediarender
rm -rf feeds/kiddin9/ipt2socks
rm -rf feeds/kiddin9/k3-brcmfmac4366c-firmware
rm -rf feeds/kiddin9/k3screenctrl
rm -rf feeds/kiddin9/libcryptopp
rm -rf feeds/kiddin9/luci-app-accesscontrol
rm -rf feeds/kiddin9/luci-app-adbyby-plus
rm -rf feeds/kiddin9/luci-app-airplay2
rm -rf feeds/kiddin9/luci-app-amule
rm -rf feeds/kiddin9/luci-app-argon-config
rm -rf feeds/kiddin9/luci-app-arpbind
rm -rf feeds/kiddin9/luci-app-autoreboot
rm -rf feeds/kiddin9/luci-app-baidupcs-web
rm -rf feeds/kiddin9/luci-app-cpufreq
rm -rf feeds/kiddin9/luci-app-diskman
rm -rf feeds/kiddin9/luci-app-dnsforwarder
rm -rf feeds/kiddin9/luci-app-easymesh
rm -rf feeds/kiddin9/luci-app-familycloud
rm -rf feeds/kiddin9/luci-app-filetransfer
rm -rf feeds/kiddin9/luci-app-frpc
rm -rf feeds/kiddin9/luci-app-frps
rm -rf feeds/kiddin9/luci-app-guest-wifi
rm -rf feeds/kiddin9/luci-app-haproxy-tcp
rm -rf feeds/kiddin9/luci-app-ipsec-vpnd
rm -rf feeds/kiddin9/luci-app-jd-dailybonus
rm -rf feeds/kiddin9/luci-app-kodexplorer
rm -rf feeds/kiddin9/luci-app-music-remote-center
rm -rf feeds/kiddin9/luci-app-mwan3helper
rm -rf feeds/kiddin9/luci-app-n2n_v2
rm -rf feeds/kiddin9/luci-app-netdata
rm -rf feeds/kiddin9/luci-app-nfs
rm -rf feeds/kiddin9/luci-app-nft-qos
rm -rf feeds/kiddin9/luci-app-nps
rm -rf feeds/kiddin9/luci-app-openvpn-server
rm -rf feeds/kiddin9/luci-app-pppoe-relay
rm -rf feeds/kiddin9/luci-app-pptp-server
rm -rf feeds/kiddin9/luci-app-ps3netsrv
rm -rf feeds/kiddin9/luci-app-pushbot
rm -rf feeds/kiddin9/luci-app-qbittorrent
rm -rf feeds/kiddin9/luci-app-ramfree
rm -rf feeds/kiddin9/luci-app-rclone
rm -rf feeds/kiddin9/luci-app-ssrserver-python
rm -rf feeds/kiddin9/luci-app-syncdial
rm -rf feeds/kiddin9/luci-app-ttyd
rm -rf feeds/kiddin9/luci-app-turboacc
rm -rf feeds/kiddin9/luci-app-unblockmusic
rm -rf feeds/kiddin9/luci-app-usb-printer
rm -rf feeds/kiddin9/luci-app-uugamebooster
rm -rf feeds/kiddin9/luci-app-v2ray-server
rm -rf feeds/kiddin9/luci-app-verysync
rm -rf feeds/kiddin9/luci-app-vlmcsd
rm -rf feeds/kiddin9/luci-app-vsftpd
rm -rf feeds/kiddin9/luci-app-webadmin
rm -rf feeds/kiddin9/luci-app-wrtbwmon
rm -rf feeds/kiddin9/luci-app-xlnetacc
rm -rf feeds/kiddin9/luci-app-zerotier
rm -rf feeds/kiddin9/luci-lib-docker
rm -rf feeds/kiddin9/luci-lib-fs
rm -rf feeds/kiddin9/luci-proto-bonding
rm -rf feeds/kiddin9/luci-theme-argon
rm -rf feeds/kiddin9/mentohust
rm -rf feeds/kiddin9/microsocks
rm -rf feeds/kiddin9/mtk-eip93
rm -rf feeds/kiddin9/n2n_v2
rm -rf feeds/kiddin9/ntfs3
rm -rf feeds/kiddin9/ntfs3-mount
rm -rf feeds/kiddin9/openwrt-fullconenat
rm -rf feeds/kiddin9/pdnsd-alt
rm -rf feeds/kiddin9/polarssl
rm -rf feeds/kiddin9/ps3netsrv
rm -rf feeds/kiddin9/qBittorrent
rm -rf feeds/kiddin9/qBittorrent-static
rm -rf feeds/kiddin9/qtbase
rm -rf feeds/kiddin9/qttools
rm -rf feeds/kiddin9/r8125
rm -rf feeds/kiddin9/r8152
rm -rf feeds/kiddin9/r8168
rm -rf feeds/kiddin9/rblibtorrent
rm -rf feeds/kiddin9/rclone
rm -rf feeds/kiddin9/rclone-ng
rm -rf feeds/kiddin9/rclone-webui-react
rm -rf feeds/kiddin9/redsocks2
rm -rf feeds/kiddin9/shortcut-fe
rm -rf feeds/kiddin9/simple-obfs
rm -rf feeds/kiddin9/srelay
rm -rf feeds/kiddin9/tcpping
rm -rf feeds/kiddin9/trojan
rm -rf feeds/kiddin9/UnblockNeteaseMusic
rm -rf feeds/kiddin9/UnblockNeteaseMusic-Go
rm -rf feeds/kiddin9/uugamebooster
rm -rf feeds/kiddin9/verysync
rm -rf feeds/kiddin9/vlmcsd
rm -rf feeds/kiddin9/vsftpd-alt
rm -rf feeds/kiddin9/wol
rm -rf feeds/kiddin9/wxbase

删除与kiddin9重复的插件
rm -rf package/lean/adbyby
rm -rf package/lean/amule
rm -rf package/lean/antileech
rm -rf package/lean/autocore
rm -rf package/lean/automount
rm -rf package/lean/baidupcs-web
rm -rf package/lean/dns2socks
rm -rf package/lean/dnsforwarder
rm -rf package/lean/dnsproxy
rm -rf package/lean/dsmboot
rm -rf package/lean/gamediarender
rm -rf package/lean/ipt2socks
rm -rf package/lean/k3-brcmfmac4366c-firmware
rm -rf package/lean/k3screenctrl
rm -rf package/lean/libcryptopp
rm -rf package/lean/luci-app-accesscontrol
rm -rf package/lean/luci-app-adbyby-plus
rm -rf package/lean/luci-app-airplay2
rm -rf package/lean/luci-app-amule
rm -rf package/lean/luci-app-arpbind
rm -rf package/lean/luci-app-autoreboot
rm -rf package/lean/luci-app-baidupcs-web
rm -rf package/lean/luci-app-cpufreq
rm -rf package/lean/luci-app-diskman
rm -rf package/lean/luci-app-dnsforwarder
rm -rf package/lean/luci-app-easymesh
rm -rf package/lean/luci-app-familycloud
rm -rf package/lean/luci-app-filetransfer
rm -rf package/lean/luci-app-frpc
rm -rf package/lean/luci-app-frps
rm -rf package/lean/luci-app-guest-wifi
rm -rf package/lean/luci-app-haproxy-tcp
rm -rf package/lean/luci-app-ipsec-vpnd
rm -rf package/lean/luci-app-jd-dailybonus
rm -rf package/lean/luci-app-kodexplorer
rm -rf package/lean/luci-app-music-remote-center
rm -rf package/lean/luci-app-mwan3helper
rm -rf package/lean/luci-app-n2n_v2
rm -rf package/lean/luci-app-netdata
rm -rf package/lean/luci-app-nfs
rm -rf package/lean/luci-app-nft-qos
rm -rf package/lean/luci-app-nps
rm -rf package/lean/luci-app-openvpn-server
rm -rf package/lean/luci-app-pppoe-relay
rm -rf package/lean/luci-app-pptp-server
rm -rf package/lean/luci-app-ps3netsrv
rm -rf package/lean/luci-app-pushbot
rm -rf package/lean/luci-app-qbittorrent
rm -rf package/lean/luci-app-ramfree
rm -rf package/lean/luci-app-rclone
rm -rf package/lean/luci-app-ssrserver-python
rm -rf package/lean/luci-app-syncdial
rm -rf package/lean/luci-app-ttyd
rm -rf package/lean/luci-app-turboacc
rm -rf package/lean/luci-app-unblockmusic
rm -rf package/lean/luci-app-usb-printer
rm -rf package/lean/luci-app-uugamebooster
rm -rf package/lean/luci-app-v2ray-server
rm -rf package/lean/luci-app-verysync
rm -rf package/lean/luci-app-vlmcsd
rm -rf package/lean/luci-app-vsftpd
rm -rf package/lean/luci-app-webadmin
rm -rf package/lean/luci-app-wrtbwmon
rm -rf package/lean/luci-app-xlnetacc
rm -rf package/lean/luci-app-zerotier
rm -rf package/lean/luci-lib-docker
rm -rf package/lean/luci-lib-fs
rm -rf package/lean/luci-proto-bonding
rm -rf package/lean/luci-theme-argon
rm -rf package/lean/mentohust
rm -rf package/lean/microsocks
rm -rf package/lean/mtk-eip93
rm -rf package/lean/n2n_v2
rm -rf package/lean/ntfs3
rm -rf package/lean/ntfs3-mount
rm -rf package/lean/openwrt-fullconenat
rm -rf package/lean/pdnsd-alt
rm -rf package/lean/polarssl
rm -rf package/lean/ps3netsrv
rm -rf package/lean/qBittorrent
rm -rf package/lean/qBittorrent-static
rm -rf package/lean/qtbase
rm -rf package/lean/qttools
rm -rf package/lean/r8125
rm -rf package/lean/r8152
rm -rf package/lean/r8168
rm -rf package/lean/rblibtorrent
rm -rf package/lean/rclone
rm -rf package/lean/rclone-ng
rm -rf package/lean/rclone-webui-react
rm -rf package/lean/redsocks2
rm -rf package/lean/shortcut-fe
rm -rf package/lean/simple-obfs
rm -rf package/lean/srelay
rm -rf package/lean/tcpping
rm -rf package/lean/trojan
rm -rf package/lean/UnblockNeteaseMusic
rm -rf package/lean/UnblockNeteaseMusic-Go
rm -rf package/lean/uugamebooster
rm -rf package/lean/verysync
rm -rf package/lean/vlmcsd
rm -rf package/lean/vsftpd-alt
rm -rf package/lean/wol
rm -rf package/lean/wxbase

5. Lienol的passwall停更了，代码仓库也删除了需要加入passwall：
vi feeds.conf.default
加入src-git Kisoul https://github.com/Kisoul/Lienol-openwrt-packages-backup
删除与Lean重复的插件
rm -rf feeds/Kisoul/package/ipt2socks
rm -rf feeds/Kisoul/package/shadowsocksr-libev
rm -rf feeds/Kisoul/package/pdnsd-alt
rm -rf feeds/Kisoul/package/verysync
rm -rf feeds/Kisoul/package/v2ray-plugin
rm -rf feeds/Kisoul/package/v2ray
rm -rf feeds/Kisoul/package/trojan
rm -rf feeds/Kisoul/package/simple-obfs
rm -rf feeds/Kisoul/package/kcptun
rm -rf feeds/Kisoul/package/dns2socks
rm -rf feeds/Kisoul/others/luci-app-verysync
rm -rf feeds/Kisoul/lienol/luci-app-softethervpn
rm -rf feeds/Kisoul/lienol/luci-app-ramfree
rm -rf feeds/Kisoul/lienol/luci-app-kodexplorer
rm -rf feeds/Kisoul/lienol/luci-app-guest-wifi
rm -rf package/lean/luci-app-pppoe-relay
rm -rf package/lean/luci-app-v2ray-server

删除与lienol最新版插件重复的插件
rm -rf feeds/Kisoul/package/tcping
rm -rf feeds/Kisoul/package/syncthing
rm -rf feeds/Kisoul/package/openssl1.1
rm -rf feeds/Kisoul/package/chinadns-ng
rm -rf feeds/Kisoul/package/brook
rm -rf feeds/Kisoul/others/luci-app-syncthing
rm -rf feeds/Kisoul/others/luci-app-kcptun
rm -rf feeds/Kisoul/others/luci-app-control-weburl
rm -rf feeds/Kisoul/others/luci-app-control-webrestriction
rm -rf feeds/Kisoul/others/luci-app-control-timewol
rm -rf feeds/Kisoul/lienol/luci-theme-bootstrap-mod
rm -rf feeds/Kisoul/lienol/luci-theme-argon-light-mod
rm -rf feeds/Kisoul/lienol/luci-theme-argon-dark-mod
rm -rf feeds/Kisoul/lienol/luci-app-v2ray-server
rm -rf feeds/Kisoul/lienol/luci-app-trojan-server
rm -rf feeds/Kisoul/lienol/luci-app-timecontrol
rm -rf feeds/Kisoul/lienol/luci-app-ssr-libev-server
rm -rf feeds/Kisoul/lienol/luci-app-pptp-vpnserver-manyusers
rm -rf feeds/Kisoul/lienol/luci-app-pppoe-server
rm -rf feeds/Kisoul/lienol/luci-app-pppoe-relay
rm -rf feeds/Kisoul/lienol/luci-app-ipsec-vpnserver-manyusers
rm -rf feeds/Kisoul/lienol/luci-app-filebrowser
rm -rf feeds/Kisoul/lienol/luci-app-fileassistant
rm -rf feeds/Kisoul/lienol/luci-app-brook-server

#rm -rf feeds/Kisoul/package/ipt2socks
#rm -rf feeds/Kisoul/package/shadowsocksr-libev
#rm -rf feeds/Kisoul/package/pdnsd-alt
#rm -rf feeds/Kisoul/package/verysync
#rm -rf feeds/Kisoul/others/luci-app-verysync
#rm -rf feeds/Kisoul/lienol/luci-app-kodexplorer  
#rm -rf package/lean/luci-app-pppoe-relay
#rm -rf package/lean/luci-app-v2ray-server
./scripts/feeds install -a
  
6. make menuconfig  
   
7.取消无线驱动
kernel modules -> Wireless Drivers -> 取消所有勾选
network -> WirelessAPD -> 取消hostapd相关的所有勾选(hostapd, hostapd-common（与wpad关联）, hostapd-common-old, hostapd-mini)
 
8. 增加nfs-v3功能
network ->Filesystem -> nfs-kernel-server
   
9. 增加ipv6
Extra packages -> ipv6help (选择后下面选项会自动勾选)
Extra packages -> ipv6helper   
Network -> odhcp6c
Network -> odhcpd-ipv6only
LuCI -> Protocols -> luci-proto-ipv6
LuCI -> Protocols -> luci-proto-ppp

10. 最后选好你要的路由，输入 make -j1 V=s （-j1 后面是线程数。第一次编译推荐用单线程，国内请尽量全局科学上网）即可开始编译你要的固件了。

11. 第二次编译：
cd lede                                                                      # 进入LEDE目录
git pull                                                                     # 同步更新大雕源码
./scripts/feeds update -a && ./scripts/feeds install -a                      # 更新Feeds
rm -rf ./tmp && rm -rf .config                                               # 清除编译配置和缓存
make menuconfig                                                              # 进入编译配置菜单
make -jn V=99                                                                # 开始编译 n=线程数+1，例如4线程的I5填-j5

12. 其他：
（1）采用WSL编译过程中出现“'files/windowsapps/canonicalgrouplimited.ubuntu18.04onwindows_2020.1804.7.0_x64__79rhkp1fndgsc' is included in the path environment variable, which is insecure in combination with the -execdir action of find. please remove that entry from $path”，可以通过运行PATH=$(echo "$PATH" | sed -e 's/:\/mnt.*//g')临时解决（重启WSL失效）；或参照https://github.com/microsoft/WSL/issues/1493将windows注册表中的\HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Lxss\{GUID}中的Flags值由7改为5，然后重启WSL。
（2）首次编译时，容易报错：bash: po2lmo: command not found 这应该是因为编译XXXXXXX需要把 luci-base 先编译出来，但是目前顺序可能是先编译了 hello world 导致出现问题，此时使用 make package/feeds/luci/luci-base/compile V=99 编译出 luci-base 后再编译就不会报错。 这个问题虽然出现的频率不高，但是也不低。
（3）Lean大的SSR-Plus代码
vim ./feeds.conf.default加入代码src-git helloworld https://github.com/fw876/helloworld

本套代码保证肯定可以编译成功。里面包括了 R9 所有源代码，包括 IPK 的。

你可以自由使用，但源码编译二次发布请注明我的 GitHub 仓库链接。谢谢合作！

特别提示：
1.源代码中绝不含任何后门和可以监控或者劫持你的 HTTPS 的闭源软件，SSL 安全是互联网最后的壁垒。安全干净才是固件应该做到的；
2.如有技术问题需要讨论，欢迎加入 QQ 讨论群：OP共享技术交流群 ,号码 297253733 ，加群链接: 点击链接加入群聊【OP共享技术交流群】：https://jq.qq.com/?_wv=1027&k=5yCRuXL
3. 想学习OpenWrt开发，但是摸不着门道？自学没毅力？基础太差？怕太难学不会？跟着佐大学OpenWrt开发入门培训班助你能学有所成
报名地址：http://forgotfun.org/2018/04/openwrt-training-2018.html


Please use "make menuconfig" to choose your preferred
configuration for the toolchain and firmware.

You need to have installed gcc, binutils, bzip2, flex, python, perl, make,
find, grep, diff, unzip, gawk, getopt, subversion, libz-dev and libc headers.

Run "./scripts/feeds update -a" to get all the latest package definitions
defined in feeds.conf / feeds.conf.default respectively
and "./scripts/feeds install -a" to install symlinks of all of them into
package/feeds/.

Use "make menuconfig" to configure your image.

Simply running "make" will build your firmware.
It will download all sources, build the cross-compile toolchain, 
the kernel and all choosen applications.

To build your own firmware you need to have access to a Linux, BSD or MacOSX system
(case-sensitive filesystem required). Cygwin will not be supported because of
the lack of case sensitiveness in the file system.


Note: Addition Lean's private package source code in ./package/lean directory. Use it under GPL v3.

GPLv3 is compatible with more licenses than GPLv2: it allows you to make combinations with code that has specific kinds of additional requirements that are not in GPLv3 itself. Section 7 has more information about this, including the list of additional requirements that are permitted.

